#!/bin/sh
# postrm script for kali-defaults
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

FILES_TO_DIVERT="
/etc/skel/.bashrc
/etc/ssl/openssl.cnf
/etc/zsh/newuser.zshrc.recommended
/etc/zsh/zprofile
/etc/xdg/autostart/gnome-software-service.desktop
/etc/xrdp/xrdp.ini
/usr/lib/python3.11/EXTERNALLY-MANAGED
/usr/share/chromium/initial_bookmarks.html
/usr/share/dbus-1/services/org.kde.kdeconnect.service
/usr/share/firefox-esr/distribution/distribution.ini
/usr/share/samba/smb.conf
/usr/share/applications/org.kde.discover.desktop
" # END FILES_TO_DIVERT

drop_diversion() {
    local file=$1
    dpkg-divert --rename --package kali-defaults \
		--divert "$file.original" \
		--remove "$file"
}

unconfigure_environment() {
    echo "Unconfiguring /etc/environment"
    sed -i '/^# START KALI-DEFAULTS CONFIG/,/^# STOP KALI-DEFAULTS CONFIG/d' \
	/etc/environment
}

restore_file() {
    local file="$1"
    local pristine_file="$2"

    if [ -e "$file" ]; then
	# Compare file with version installed by kali-defaults
	if cmp -s "$file" "$pristine_file"; then
	    # Unmodified file, we drop it
	    rm -v "$file"
	else
	    # Modified file, we keep it around
	    mv -v "$file" "$file.disabled-by-kali-defaults"
	fi
    fi

    # Restore original file if it exists
    if [ -e "$file.original" ]; then
	mv -v "$file.original" "$file"
    fi

    # Otherwise restore the user modified file if we kept it
    if [ ! -e "$file" ] && [ -e "$file.disabled-by-kali-defaults" ]; then
	mv -v "$file.disabled-by-kali-defaults" "$file"
    fi
}

unconfigure_root_account() {
    echo "Unconfiguring root account"
    # Both files are overwritten or created by the postinst, we try to
    # undo this here to be piuparts clean
    restore_file /root/.bashrc
    restore_file /root/.zshrc
}

case "$1" in
    remove)
	unconfigure_root_account
	unconfigure_environment

	for file in $FILES_TO_DIVERT; do
	    rm -f "$file"
	    drop_diversion "$file"
	done
    ;;

    purge|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_start/13.11.4
if [ "$1" = remove ] && [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/13.11.4
if [ "$1" = "purge" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper purge 'regenerate-ssh-host-keys.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
